package org.fh.general.ecom.order.service.impl;

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.github.pagehelper.PageHelper;
import lombok.extern.slf4j.Slf4j;
import org.fh.general.ecom.common.dto.order.auditLog.AuditLogAddInputDTO;
import org.fh.general.ecom.common.dto.order.order.OrderListOutputDTO;
import org.fh.general.ecom.common.dto.order.withdrawal.AuditSureInputDTO;
import org.fh.general.ecom.common.dto.order.withdrawal.WithdrawalAddInputDTO;
import org.fh.general.ecom.common.dto.order.withdrawal.WithdrawalDetailOutputDTO;
import org.fh.general.ecom.common.dto.order.withdrawal.WithdrawalListInputDTO;
import org.fh.general.ecom.common.dto.order.withdrawal.WithdrawalListOutputDTO;
import org.fh.general.ecom.common.enumeration.order.WithdrawalEnum;
import org.fh.general.ecom.common.enums.OutEnum;
import org.fh.general.ecom.common.po.order.order.OrderListOutPO;
import org.fh.general.ecom.common.po.order.order.OrderListParamPO;
import org.fh.general.ecom.common.po.order.withdrawal.WithdrawalListOutPO;
import org.fh.general.ecom.common.po.order.withdrawal.WithdrawalListParamPO;
import org.fh.general.ecom.order.model.AuditLog;
import org.fh.general.ecom.order.model.Withdrawal;
import org.fh.general.ecom.order.dao.WithdrawalDao;
import org.fh.general.ecom.order.service.AuditLogService;
import org.fh.general.ecom.order.service.WithdrawalService;
import com.baomidou.mybatisplus.service.impl.ServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;


import org.fh.general.ecom.common.utils.StringUtils;
import org.springframework.beans.BeanUtils;
import com.github.pagehelper.PageInfo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * <p>
 * 提现申请表 服务实现类
 * </p>
 *
 * @author pjj
 * @since 2018-09-14
 */
@Slf4j
@Service
public class WithdrawalServiceImpl extends ServiceImpl<WithdrawalDao, Withdrawal> implements WithdrawalService {

    @Autowired
    private AuditLogService auditLogService;

    @Override
    public WithdrawalListOutputDTO findPage(WithdrawalListInputDTO dto)throws Exception {
        WithdrawalListParamPO paramPO=new WithdrawalListParamPO();
        BeanUtils.copyProperties(dto,paramPO);
        PageHelper.startPage(dto.getCurrentPageNum(), dto.getPageCount());
        List<WithdrawalListOutPO>  list=baseMapper.findWithdrawalList(paramPO);
        PageInfo pageInfo=new PageInfo(list);

        WithdrawalListOutputDTO response=new WithdrawalListOutputDTO();
        if(list !=null && list.size()>0){
            response.setList(list);
            response.setPageInfo(pageInfo);
        }
        return response;
    }


    @Override
    public String addEntity(WithdrawalAddInputDTO dto)  throws Exception{
        String code="";
        try {
            Withdrawal entity=new Withdrawal();
            BeanUtils.copyProperties(dto,entity );
            baseMapper.insert(entity);
            code= OutEnum.SUCCESS.getCode();
        }catch (Exception e){
            e.printStackTrace();
            code=OutEnum.FAIL.getCode();
        }
        return code;
    }

    @Override
    public WithdrawalDetailOutputDTO findEntityById(Long id) {
        WithdrawalDetailOutputDTO dto=new WithdrawalDetailOutputDTO();
        Withdrawal entity= baseMapper.selectById(id);
        if(entity==null){
            log.info("入参ID["+id+"]有误，Withdrawal查无数据");
            return null;
        }
        BeanUtils.copyProperties(entity,dto);
        return dto;
    }

    @Override
    public String auditSure(AuditSureInputDTO dto) {
        try {
            Long id=dto.getId();
            //更新主表
            Withdrawal  entity=baseMapper.selectById(id);
            if(entity==null){
                return "入参ID["+dto.getId()+"]有误，提现申请表（tb_withdrawal）查无数据";
            }
            entity.setStatus(dto.getStatus());
            entity.setAudit(dto.getAuditName());
            baseMapper.updateAllColumnById(entity);
            //记录审核日志
            AuditLog logEn=new AuditLog();
            logEn.setAddTime(new Date());
            logEn.setAuditName(dto.getAuditName());
            logEn.setRemark(dto.getAuditReamrk());
            logEn.setResults(WithdrawalEnum.auditStatus.codeOf(dto.getStatus()).getName());//2-通过 3-驳回
            AuditLogAddInputDTO inputDto=new AuditLogAddInputDTO();
            BeanUtils.copyProperties(logEn,inputDto);
            this.auditLogService.addEntity(inputDto);
            return  OutEnum.SUCCESS.getCode();
        } catch (Exception e) {
            e.printStackTrace();
            return OutEnum.FAIL.getCode();
        }
    }

}
