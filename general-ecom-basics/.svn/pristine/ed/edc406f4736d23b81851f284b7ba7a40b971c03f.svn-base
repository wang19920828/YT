package org.fh.general.ecom.basics.controller;

import org.fh.general.ecom.basics.service.ElectronicsAccountService;
import org.fh.general.ecom.common.base.BaseVO;
import org.fh.general.ecom.common.comm.OutCodeEntity;
import org.fh.general.ecom.common.dto.basics.user.electronicsAccount.ElectronicsAccountOutputDTO;
import org.fh.general.ecom.common.dto.basics.user.electronicsAccount.ElectronicsAccountPwdInputDTO;
import org.fh.general.ecom.common.dto.basics.user.electronicsAccount.ElectronicsAccountUpdatePwdInputDTO;
import org.fh.general.ecom.common.dto.basics.user.electronicsAccount.ElectronicsInitAccountInputDTO;
import org.fh.general.ecom.common.enums.OutEnum;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * <p>
 * 电子账户基本信息表 前端控制器
 * </p>
 *
 * @author wzy
 * @since 2018-09-27
 */
@RestController
public class ElectronicsAccountController {

    @Autowired
    private ElectronicsAccountService electronicsAccountService;
    /**
     *开通电子账户
     */
    @RequestMapping("EAC00001")
    public BaseVO initAccount(ElectronicsInitAccountInputDTO dto){
        BaseVO baseVO = new BaseVO();
        String code = electronicsAccountService.initAccount(dto);
        if(!OutEnum.SUCCESS.getCode().equals(code)){
            baseVO.error(code);
            return  baseVO;
        }
        baseVO.success();
        return baseVO;
    }
    /**
     *  置支付密码
     */
    @RequestMapping("EAC00002")
    public BaseVO createAccountPwd(ElectronicsAccountPwdInputDTO dto){
        BaseVO baseVO = new BaseVO();
        OutCodeEntity code = electronicsAccountService.createAccountPwd(dto);
        if(!OutEnum.SUCCESS.getCode().equals(code.getCode())){
            baseVO.error(code.getMessage());
            return  baseVO;
        }
      //  baseVO.success(code.getObj());
        baseVO.success();
        return baseVO;
    }
    /**
     * 修改支付密码
     */
    @RequestMapping("EAC00003")
    public BaseVO updatePayPwd (ElectronicsAccountUpdatePwdInputDTO dto){
        BaseVO baseVO = new BaseVO();
        String code = electronicsAccountService.updatePayPwd(dto);
        if(!OutEnum.SUCCESS.getCode().equals(code)){
            baseVO.error(code);
            return  baseVO;
        }
        baseVO.success();
        return baseVO;
    }
    /**
     * 根据userId查电子账户信息
     */
    @RequestMapping("EAC00004")
    public BaseVO findByUserId (Long userId){
        BaseVO baseVO = new BaseVO();
        ElectronicsAccountOutputDTO out = electronicsAccountService.findAccountByUserId(userId);
        if(null==out){
            baseVO.noData();
            return  baseVO;
        }
        baseVO.success(out);
        return baseVO;
    }

}
